name: Run tests (PHPUnit & phpcs)

on:
  push:
    branches: [ "main", "dev" ]
    paths-ignore:
      - '**.md'
  pull_request:
    types: [ opened, reopened, edited, ready_for_review ]
    branches: [ "main", "dev" ]
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  run-tests:

    runs-on: ubuntu-20.04

    strategy:
      matrix:
        php: ['8.2', '8.3']
        coverage: [false]

        include:
          - php: '8.2'
            coverage: true

    name: "PHP ${{ matrix.php }} ${{ matrix.coverage && ' with code coverage' || '' }}"

    continue-on-error: ${{ matrix.php == '8.2' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        uses: php-actions/composer@v6
        with:
          php_version: ${{ matrix.php }}
          args: --classmap-authoritative --no-progress --audit

      - name: Validate composer.json and composer.lock
        uses: php-actions/composer@v6
        with:
          php_version: ${{ matrix.php }}
          command: validate
          args: --strict --with-dependencies

      - name: Run tests with code coverage
        if: ${{ matrix.coverage == true }}
        uses: php-actions/composer@v6
        env:
          XDEBUG_MODE: coverage
        with:
          php_version: ${{ matrix.php }}
          php_extensions: xdebug
          command: exec
          only_args: -- phpunit

      - name: Run tests without coverage
        if: ${{ matrix.coverage == false }}
        uses: php-actions/composer@v6
        with:
          php_version: ${{ matrix.php }}
          command: exec
          only_args: -- phpunit --no-coverage

      - name: Upload coverage results to Coveralls
        if: ${{ success() && matrix.coverage == true }}
        uses: coverallsapp/github-action@v2
        with:
          format: clover
          file: var/clover.xml
          flag-name: php-${{ matrix.php }}
          parallel: true

      - name: Code coverage summary
        if: ${{ matrix.coverage == true }}
        uses: php-actions/composer@v6
        with:
          php_version: ${{ matrix.php }}
          command: code-coverage-report
          only_args: --ignore-threshold --coverage-clover var/clover.xml

      - name: Check code against the PSR-12 coding standard
        uses: php-actions/composer@v6
        with:
          php_version: ${{ matrix.php }}
          command: run-script
          only_args: ci:lint

      - name: Upload the code coverage report
        if: ${{ matrix.coverage == true }}
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report
          path: ./var/clover.xml
          if-no-files-found: error
          retention-days: 28

      - name: Upload the PHPCS report
        uses: actions/upload-artifact@v4
        with:
          name: phpcs-report
          path: ./var/phpcs-report.xml
          if-no-files-found: error
          retention-days: 28

  coveralls-finish:
    needs: run-tests
    if: always() && needs.run-tests.result == 'success'

    runs-on: ubuntu-latest

    steps:
      - name: Coveralls Finished
        uses: coverallsapp/github-action@v2
        with:
          parallel-finished: true
          carryforward: "php-8.2"
