name: Run tests (PHPUnit & phpcs)

on:
  push:
    branches: [ "main", "dev" ]
    paths-ignore:
      - '**.md'
  pull_request:
    types: [ opened, reopened, edited, ready_for_review ]
    branches: [ "main", "dev" ]
  workflow_dispatch:

permissions:
  contents: read

#env:
#  PHP_VERSION: 8.2

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  run-tests:

    runs-on: ubuntu-20.04

    strategy:
      # Keys:
      # - custom_ini: Whether to run with specific custom ini settings to hit very specific
      #   code conditions.
      matrix:
        php: ['8.2', '8.3']
#        custom_ini: [false]

#        include:
          # Skip test runs on builds which are also run for in the coverage job.
          # Note: the tests on PHP 7.2 will still be run as the coverage build is uses custom_ini for that version.
#          - php: '8.3'
#            skip_tests: true

          # Extra builds running only the unit tests with different PHP ini settings.
#          - php: '5.5'
#            custom_ini: true
#          - php: '7.0'
#            custom_ini: true

    name: "PHP: ${{ matrix.php }}"

    continue-on-error: ${{ matrix.php == '8.2' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        uses: php-actions/composer@v6
        with:
          php_version: ${{ matrix.php }}
          args: --classmap-authoritative --no-progress --audit

      - name: Validate composer.json and composer.lock
        uses: php-actions/composer@v6
        with:
          php_version: ${{ matrix.php }}
          command: validate
          args: --strict --with-dependencies

      - name: Run test suite
        uses: php-actions/composer@v6
        env:
          XDEBUG_MODE: coverage
        with:
          php_version: ${{ matrix.php }}
          php_extensions: xdebug
          command: exec
          only_args: -- phpunit --coverage-text=coverage.txt

      - name: Code coverage report
        uses: php-actions/composer@v6
        with:
          php_version: ${{ matrix.php }}
          command: code-coverage-report
          only_args: --ignore-threshold --coverage-text=coverage.txt

      - name: Check code against the PSR-12 coding standard
        uses: php-actions/composer@v6
        with:
          php_version: ${{ matrix.php }}
          command: run-script
          only_args: test:cs-all
