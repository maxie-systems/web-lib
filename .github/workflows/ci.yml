name: Run tests (PHPUnit & phpcs)

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    types: [ opened, reopened, edited, ready_for_review ]
    branches: [ "main", "dev" ]
  workflow_dispatch:

permissions:
  contents: read

env:
  PHP_VERSION: 8.2

jobs:
  run-tests:

    runs-on: ubuntu-20.04

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        uses: php-actions/composer@v6
        with:
          php_version: ${{ env.PHP_VERSION }}
          args: --classmap-authoritative --no-progress

      - name: Validate composer.json and composer.lock
        uses: php-actions/composer@v6
        with:
          php_version: ${{ env.PHP_VERSION }}
          command: validate
          args: --strict --with-dependencies

      - name: Run test suite
        uses: php-actions/composer@v6
        env:
          XDEBUG_MODE: coverage
        with:
          php_version: ${{ env.PHP_VERSION }}
          php_extensions: xdebug
          command: exec
          only_args: -- phpunit --coverage-text=coverage.txt

      - name: Code coverage report
        uses: php-actions/composer@v6
        with:
          php_version: ${{ env.PHP_VERSION }}
          command: code-coverage-report
          only_args: --ignore-threshold --coverage-text=coverage.txt

      - name: Check code against the PSR-12 coding standard
        uses: php-actions/composer@v6
        with:
          php_version: ${{ env.PHP_VERSION }}
          command: run-script
          only_args: test-psr12-all
